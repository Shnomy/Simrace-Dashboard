@{
    ViewBag.Title = "Zoom Chart";
    Layout = "_Layout";
}

<h2>Zoom Chart</h2>

<head>
    <script src="https://cdn.jsdelivr.net/npm/moment@2.24.0/min/moment.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/hammerjs@2.0.8"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom@0.7.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-streaming@1.8.0"></script>
</head>
<body>
<div>
    <canvas id="myChart" width="400" height="200"></canvas>
</div>
<p>
    <button id="randomizeData">Randomize Data</button>
    <button id="addDataset">Add Dataset</button>
    <button id="removeDataset">Remove Dataset</button>
    <button id="addData">Add Data</button>
    <button id="resetZoom">Reset Zoom</button>
</p>
</body>
@section Scripts
{
    <script src="https://unpkg.com/axios/dist/axios.js"></script>
    <script>
        // Dette chartet kan zoome og scrolles, perfekt for analyse

        var chartColors = {
            red: 'rgb(255, 99, 132)',
            orange: 'rgb(255, 159, 64)',
            yellow: 'rgb(255, 205, 86)',
            green: 'rgb(75, 192, 192)',
            blue: 'rgb(54, 162, 235)',
            purple: 'rgb(153, 102, 255)',
            grey: 'rgb(201, 203, 207)'
        };

        function randomScalingFactor() {
            return (Math.random() > 0.5 ? 1.0 : -1.0) * Math.round(Math.random() * 100);
        }
        
        

        var color = Chart.helpers.color;
        var config = {
            type: 'line',
            data: {
                datasets: [{
                    label: 'RPM',
                    backgroundColor: color(chartColors.red).alpha(0.5).rgbString(),
                    borderColor: chartColors.red,
                    fill: false,
                    lineTension: 0,
                    borderDash: [8, 4],
                    data: []
                }, {
                    label: 'Dataset 2 (cubic interpolation)',
                    backgroundColor: color(chartColors.blue).alpha(0.5).rgbString(),
                    borderColor: chartColors.blue,
                    fill: false,
                    cubicInterpolationMode: 'monotone',
                    data: []
                }]
            },
            options: {
                title: {
                    display: true,
                    text: 'CHAAAARTSS'
                },
                scales: {
                    xAxes: [{
                        type: 'linear',
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'value'
                        }
                    }],
                    yAxes: [{
                        type: 'linear',
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'value'
                        }
                    }]
                },
                tooltips: {
                    mode: 'nearest',
                    intersect: false
                },
                hover: {
                    mode: 'nearest',
                    intersect: false
                },
                pan: {
                    enabled: true,
                    mode: 'x',
                    rangeMax: {
                        x: 4000
                    },
                    rangeMin: {
                        x: 0
                    }
                },
                zoom: {
                    enabled: true,
                    mode: 'x',
                    rangeMax: {
                        x: 20000
                    },
                    rangeMin: {
                        x: 1000
                    }
                }
            }
        };

        window.onload = function() {
            var ctx = document.getElementById('myChart').getContext('2d');
            window.myChart = new Chart(ctx, config);
        };


        var colorNames = Object.keys(chartColors);
        document.getElementById('addDataset').addEventListener('click', function() {
            var colorName = colorNames[config.data.datasets.length % colorNames.length];
            var newColor = chartColors[colorName];

            var newDataset = {
                label: 'Dataset ' + (config.data.datasets.length + 1),
                backgroundColor: color(newColor).alpha(0.5).rgbString(),
                borderColor: newColor,
                fill: false,
                lineTension: 0,
                data: []
            };
            
            axios.get('/api/Analyze').then(function(response) {
                console.log(response.data);
                response.data.forEach(function(data) {
                    
                    newDataset.data.push({
                        x: data.racetime,
                        y: data.rpm
                     });
                });
            });

            config.data.datasets.push(newDataset);
            window.myChart.update();
        });

        document.getElementById('removeDataset').addEventListener('click', function() {
            config.data.datasets.pop();
            window.myChart.update();
        });

        document.getElementById('addData').addEventListener('click', function() {
            onRefresh(window.myChart);
            window.myChart.update();
        });

        document.getElementById('resetZoom').addEventListener('click', function() {
            window.myChart.resetZoom();
        });
    </script>
    
}